security:
    password_hashers:
        App\User\Domain\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\User\Domain\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        # JWT Login endpoint
        api_login:
            pattern: ^/api/auth/login
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: api_auth_login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        
        # JWT protected API endpoints
        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~

    access_control:
        - { path: ^/api/auth/login$, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/register$, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/logout$, roles: PUBLIC_ACCESS }
        - { path: ^/api/test/public$, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/, roles: PUBLIC_ACCESS } 